@model DATC_Core.Models.PostCategory

@{
    ViewData["Title"] = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <section class="content py-2">
        <div class="container-fluid">
            <!--Content-->
            <div class="card">
                <div class="card-header">
                    <div class="row">
                        <div class="col-8">
                            <h5 class="text-csm">@ViewBag.Title</h5>
                        </div>
                        <div class="col-4">
                            <div class="float-right pt-1">
                                <button type="submit" class="btn btn-primary btn-sm">
                                    <i class="fas fa-save"></i>&nbsp; Update
                                </button>
                                <button type="button" class="btn btn-danger btn-sm">
                                    <a href="~/Admin/PostCategory/Index" class="text-white"><i class="fas fa-door-open"></i>&nbsp; Thoát</a>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- /.card-header -->
                <div class="card-body">

                    <div class="row">
                        <div class="col-md-9">
                            <div class="form-horizontal">

                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                @Html.HiddenFor(model => model.CateId)

                                <div class="form-group">
                                    <label class="control-label col-md-2">Tên danh mục</label>
                                    @Html.EditorFor(model => model.CateName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.CateName, "", new { @class = "text-danger"  })
                                </div>

                                <div class="form-group">
                                    <label class="control-label col-md-2">Mô tả</label>
                                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger"  })
                                </div>

                                <div class="form-group">
                                    <label class="control-label col-md-2">Danh mục</label>
                                    @Html.DropDownListFor(model => model.CateId,  new[] { new SelectListItem { Value = "1", Text = "Loại a" }, new SelectListItem { Value = "2", Text = "Loại b" }}, "[Danh mục]" , new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.CateId, "", new { @class = "text-danger"  })
                                </div>

                                <div class="form-group">
                                    <label for="exampleInputFile">Cover</label>
                                    <div class="input-group">
                                        <div class="custom-file">
                                            @Html.TextBoxFor(x => x.Cover, new { @id = "txtImage", @class = "form-control" })

                                            <input type="file" class="custom-file-input" id="exampleInputFile">
                                            <label class="custom-file-label" for="exampleInputFile">Choose file</label>
                                        </div>
                                    </div>
                                </div>

                            </div>
                        </div>
                        <div class="col-md-3">

                            <div class="form-group">
                                <label class="control-label col-md-10">Trạng thái</label>
                                @Html.DropDownListFor(model => model.Published,  new[] { new SelectListItem { Value = "true", Text = "Hiển thị" },new SelectListItem { Value = "false", Text = "Không hiển thị" }, }, "[Trạng thái]", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Published, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                <label class="control-label col-md-10">Cấp cha</label>
                                @Html.DropDownListFor(model => model.ParentId,  new[] { new SelectListItem { Value = "1", Text = "1" }, new SelectListItem { Value = "2", Text = "2" }}, "[Là cấp cha]" , new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ParentId, "", new { @class = "text-danger"  })
                            </div>

                            <div class="form-group">
                                <label class="control-label col-md-10">Levels</label>
                                @Html.DropDownListFor(model => model.Levels,  new[] { new SelectListItem { Value = "1", Text = "1" }, new SelectListItem { Value = "2", Text = "2" }}, "[Levels]" , new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Levels, "", new { @class = "text-danger"  })
                            </div>

                            <div class="form-group">
                                <label class="control-label col-md-10">Ordering</label>
                                @Html.DropDownListFor(model => model.Ordering,  new[] { new SelectListItem { Value = "1", Text = "1" }, new SelectListItem { Value = "2", Text = "2" }}, "[Ordering]" , new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Ordering, "", new { @class = "text-danger"  })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
}



