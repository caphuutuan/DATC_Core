@model DATC_Core.Models.Product

@{
    ViewData["Title"] = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

@section Styles{
    <link href="~/adminassets/plugins/summernote/summernote-bs4.min.css" rel="stylesheet" />
    <link href="~/adminassets/plugins/summernote/summernote.css" rel="stylesheet" />

}

@using (Html.BeginForm("Create", "Products", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <section class="content py-2">
        <div class="container-fluid">
            <!--Content-->
            <div class="card">
                <div class="card-header">
                    <div class="row">
                        <div class="col-8">
                            <h5 class="text-csm">@ViewBag.Title</h5>
                        </div>
                        <div class="col-4">
                            <div class="float-right pt-1">
                                <button type="submit" class="btn btn-primary btn-sm">
                                    <i class="fas fa-save"></i>&nbsp; Save
                                </button>
                                <button type="button" class="btn btn-danger btn-sm">
                                    <a href="~/Admin/Products/Index" class="text-white"><i class="fas fa-door-open"></i>&nbsp; Thoát</a>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- /.card-header -->
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-9">
                            <div class="form-horizontal">

                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                <div class="form-group">
                                    <label class="control-label col-md-2">Tên sản phẩm</label>
                                    @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control"} })
                                    @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger"  })
                                </div>

                                <div class="form-group">
                                    <label class="control-label col-md-2">Mô tả</label>
                                    @Html.EditorFor(model => model.ShortDesc, new { htmlAttributes = new { @class = "form-control summernote" } })
                                    @Html.ValidationMessageFor(model => model.ShortDesc, "", new { @class = "text-danger"  })
                                </div>

                                <div class="form-group">
                                    <label class="control-label col-md-2">Chi tiết</label>
                                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control"  } })
                                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger"  })
                                </div>

                                <div class="form-group">
                                    <label class="control-label col-md-2">Nhãn</label>
                                    @Html.DropDownListFor(model=>model.Tags, ViewBag.cateList as SelectList, "[Chọn tags]", new { @class = "form-control select2 ", @multiple="multiple" })
                                    @Html.ValidationMessageFor(model => model.Tags, "", new { @class = "text-danger"  })
                                </div>

                                <div class="form-group">
                                    <label class="control-label col-md-2">MetaKey</label>
                                    @Html.EditorFor(model => model.MetaKey, new { htmlAttributes = new { @class = "form-control"  } })
                                    @Html.ValidationMessageFor(model => model.MetaKey, "", new { @class = "text-danger"  })
                                </div>

                                <div class="form-group">
                                    <label class="control-label col-md-2">MetaDesc</label>
                                    @Html.EditorFor(model => model.MetaDesc, new { htmlAttributes = new { @class = "form-control"  } })
                                    @Html.ValidationMessageFor(model => model.MetaDesc, "", new { @class = "text-danger"  })
                                </div>

                                <div class="form-group">
                                    <label for="Thumb">Thumb</label>
                                    <input name="fThumb" type="file" class="form-control-file" asp-for="Thumb">
                                    @Html.ValidationMessageFor(model => model.Thumb, "", new { @class = "text-danger"  })
                                </div>

                                <div class="form-group">
                                    <label for="Video">Video</label>
                                    <br>
                                    <input name="fVideo" type="file" class="form-control-file" accept='image/*' onchange="showImage(this);" asp-for="Video">
                                    @Html.ValidationMessageFor(model => model.Video, "", new { @class = "text-danger"  })
                                </div>

                                @* <div class="form-group">
                            <p>Browse Image : <input type='file' accept='image/*' onchange="readURL(this)"></p>
                            <img src="" alt="No Image" id="product-img" style='height:150px;'>
                            </div> *@
                            </div>
                        </div>

                        <div class="col-md-3">

                            <div class="form-group">
                                <label class="control-label col-md-5">Tiêu đề</label>
                                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger"  })
                            </div>

                            <div class="form-group">
                                <label class="control-label col-md-5">Danh mục</label>
                                @Html.DropDownListFor(model=>model.CateId, ViewBag.cateList as SelectList, "Chọn thể loại", new { @class = "form-control select2" })
                                @Html.ValidationMessageFor(model => model.CateId, "", new { @class = "text-danger"  })

                                @* <select class="custom-select form-control" asp-for="Active" asp-items="ViewBag.DanhMuc">
                            <option value="" disabled selected>Chọn danh mục</option>
                            </select>
                            <span asp-validation-for="CateId" class="text-danger"></span> *@

                            </div>

                            @*<div class="form-group">
                        <label class="control-label col-md-5">Danh mục</label>
                        <select class="form-control select2" asp-items="ViewBag.DanhMuc" asp-for="CateId">
                        <option selected="selected" disabled>Chọn danh mục</option>
                        </select>
                        </div> *@

                            @* <div class="form-group">
                        <label class="control-label col-md-5">Alias</label>
                        @Html.EditorFor(model => model.Alias, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Alias, "", new { @class = "text-danger"  })
                        </div> *@

                            <div class="form-group">
                                <label class="control-label col-md-5">Giá gốc</label>
                                @* @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger"  }) *@

                                <input type="number" id="Price" asp-for="Price" oninput="calculatePrice()" class="form-control" min="0">
                                <span asp-validation-for="Price" class="text-danger"></span>

                            </div>

                            <div class="form-group">
                                <label class="control-label col-md-5">Discount</label>
                                @* @Html.EditorFor(model => model.Discount, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger"  }) *@

                                <input type="number" id="Discount" asp-for="Discount" oninput="calculatePrice()" class="form-control" min="0">
                                <span asp-validation-for="Discount" class="text-danger"></span>
                            </div>

                            <div class="form-group">
                                <label class="control-label col-md-5">Giá bán</label>
                                @* @Html.EditorFor(model => model.Discount, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger"  }) *@

                                <input type="number" id="PriceSell" asp-for="PriceSell" readonly class="form-control">
                            </div>


                            <div class="form-group">
                                <label class="control-label col-md-5">Tồn kho</label>
                                @Html.EditorFor(model => model.UnitsInStock, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.UnitsInStock, "", new { @class = "text-danger"  })
                            </div>

                            <div class="form-group">
                                <label class="control-label col-md-10">Trang đầu</label>
                                @Html.DropDownListFor(model => model.IsHome,  new[] { new SelectListItem { Value = "true", Text = "Có" },new SelectListItem { Value = "false", Text = "Không" } }, "[Trang đầu]" , new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.IsHome, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                <label class="control-label col-md-10">Bán chạy</label>
                                @Html.DropDownListFor(model => model.BestSeller,  new[] { new SelectListItem { Value = "true", Text = "Có" },new SelectListItem { Value = "false", Text = "Không" }}, "[Bán chạy]", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.BestSeller, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                <label class="control-label col-md-10">Trạng thái</label>
                                @*  @Html.DropDownListFor(model => model.Active,  new[] { new SelectListItem { Value = "true", Text = "Hiển thị" },new SelectListItem { Value = "false", Text = "Không hiển thị" }, }, "[Trạng thái]", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" }) *@

                                <select class="custom-select form-control" asp-for="Active" asp-items="ViewBag.StatusList">
                                    <option value="" disabled selected>Chọn trạng thái</option>
                                </select>
                                <span asp-validation-for="Active" class="text-danger"></span>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
}

@section Scripts {

    <script src="~/adminassets/plugins/summernote/summernote-bs4.js"></script>

    <script>
        function showImage(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $('#product-img').attr('src', e.target.result);
                };
                reader.readAsDataURL(input.files[0]);
            }
        };

        jQuery(document).ready(function () {
            $('.summernote').summernote({
                fontNames: ['Arial', 'Arial Black', 'Comic Sans MS', 'Courier New'],
                styleTags: ['p', 'h1', 'h2', 'h3', 'h4', 'h5'],
                height: 200,
                minHeight: null,
                maxHeight: null,
                focus: true
            });
        });

        function calculatePrice() {
            // Lấy giá trị từ các ô input
            var originalPrice = parseFloat(document.getElementById('Price').value) || 0;
            var discount = parseFloat(document.getElementById('Discount').value) || 0;

            // Tính giá bán
            var priceSell = originalPrice - (originalPrice * discount / 100);

            // Hiển thị kết quả trong ô input sellingPrice
            document.getElementById('PriceSell').value = priceSell
        };
    </script>

@*     <script>

        // $('.summernote').summernote();
        // $('.summernote').summernote(option = {});
        $(document).ready(function () {
            $('.summernote').summernote({
                placeholder: 'Enter content....',
                tabsize: 2,
                height: 200,
                minHeight: 100,
                maxHeight: 300,
                focus: true,
                toolbar: [
                    ['style', ['bold', 'italic', 'underline', 'clear']],
                    ['font', ['strikethrough', 'superscript', 'subscript']],
                    ['fontsize', ['fontsize']],
                    ['color', ['color']],
                    ['para', ['ul', 'ol', 'paragraph']],
                    ['height', ['height']],
                    ['table', ['table']],
                    ['insert', ['link', 'picture', 'video']],
                    ['view', ['fullscreen', 'codeview', 'help']],
                ],
                popover: {
                    image: [
                        ['image', ['resizeFull', 'resizeHalf', 'resizeQuarter', 'resizeNone']],
                        ['float', ['floatLeft', 'floatRight', 'floatNone']],
                        ['remove', ['removeMedia']]
                    ],
                    link: [
                        ['link', ['linkDialogShow', 'unlink']]
                    ],
                    table: [
                        ['add', ['addRowDown', 'addRowUp', 'addColLeft', 'addColRight']],
                        ['delete', ['deleteRow', 'deleteCol', 'deleteTable']],
                    ],
                    air: [
                        ['color', ['color']],
                        ['font', ['bold', 'underline', 'clear']],
                        ['para', ['ul', 'paragraph']],
                        ['table', ['table']],
                        ['insert', ['link', 'picture']]
                    ]
                },
                codemirror: {
                    theme: 'monokai'
                }
            });
        });
    </script> *@
}