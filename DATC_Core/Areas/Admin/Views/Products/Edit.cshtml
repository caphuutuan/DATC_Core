@model DATC_Core.Models.Product

@{
    ViewData["Title"] = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <section class="content py-2">
        <div class="container-fluid">
            <!--Content-->
            <div class="card">
                <div class="card-header">
                    <div class="row">
                        <div class="col-8">
                            <h5 class="text-csm">@ViewBag.Title</h5>
                        </div>
                        <div class="col-4">
                            <div class="float-right pt-1">
                                <button type="submit" class="btn btn-primary btn-sm">
                                    <i class="fas fa-save"></i>&nbsp; Update
                                </button>
                                <button type="button" class="btn btn-danger btn-sm">
                                    <a href="~/Admin/Products/Index" class="text-white"><i class="fas fa-door-open"></i>&nbsp; Thoát</a>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- /.card-header -->
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-9">
                            <div class="form-horizontal">

                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                @Html.HiddenFor(model => model.ProductId)
                                @Html.HiddenFor(model => model.Thumb)
                                @Html.HiddenFor(model => model.Video)
                                @Html.HiddenFor(model => model.CreateDate)

                                <div class="form-group">
                                    <label class="control-label col-md-2">Tên sản phẩm</label>
                                    @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger"  })
                                </div>

                                <div class="form-group">
                                    <label class="control-label col-md-2">Mô tả</label>
                                    @Html.EditorFor(model => model.ShortDesc, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ShortDesc, "", new { @class = "text-danger"  })
                                </div>

                                <div class="form-group">
                                    <label class="control-label col-md-2">Chi tiết</label>
                                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger"  })
                                </div>

                                <div class="form-group">
                                    <label class="control-label col-md-2">Danh mục</label>
                                    @Html.DropDownList("CateId", ViewBag.cateList as SelectList, "Chọn thể loại", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.CateId, "", new { @class = "text-danger"  })
                                </div>

                                <div class="form-group">
                                    <label class="control-label col-md-2">Nhãn</label>
                                    @Html.DropDownList("CateId", ViewBag.cateList as SelectList, "Chọn thể loại", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Tags, "", new { @class = "text-danger"  })
                                </div>

                                <div class="form-group">
                                    <label class="control-label col-md-2">MetaKey</label>
                                    @Html.EditorFor(model => model.MetaKey, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.MetaKey, "", new { @class = "text-danger"  })
                                </div>

                                <div class="form-group">
                                    <label class="control-label col-md-2">MetaDesc</label>
                                    @Html.EditorFor(model => model.MetaDesc, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.MetaDesc, "", new { @class = "text-danger"  })
                                </div>

                                <div class="form-group">
                                    <label for="Thumb">Thumb</label>
                                    <br>
                                    @if (Model.Thumb != null)
                                    {

                                        <img src="~/images/products/@Model.Thumb" class="pb-3" style="width: 110px;object-fit: contain;" alt="Cover" />
                                    }
                                    else
                                    {

                                    }
                                    <input name="fThumb" type="file" class="form-control-file" asp-for="Thumb">
                                    @Html.ValidationMessageFor(model => model.Thumb, "", new { @class = "text-danger"  })
                                </div>

                                <div class="form-group">
                                    <label for="Video">Video</label>
                                    <br>
                                    @if (Model.Thumb != null)
                                    {

                                        <img class="pb-3" src="~/images/products/@Model.Video" width="auto" height="150" alt="avatar" />

                                    }
                                    else
                                    {

                                    }
                                    <input name="fThumb" type="file" class="form-control-file" asp-for="Video">
                                    @Html.ValidationMessageFor(model => model.Video, "", new { @class = "text-danger"  })
                                </div>

                                @* <div class="gallery">
                            <div class="btn_close">
                            <i class='bx bx-x close'></i>
                            </div>
                            <div class="gallery_inner">
                            <img class="gallery_img" src="~/images/products/@Model.Thumb" alt="image">
                            </div>
                            </div>  *@

                            </div>
                        </div>

                        <div class="col-md-3">

                            <div class="form-group">
                                <label class="control-label col-md-5">Tiêu đề</label>
                                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger"  })
                            </div>

                            <div class="form-group">
                                <label class="control-label col-md-5">Alias</label>
                                @Html.EditorFor(model => model.Alias, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Alias, "", new { @class = "text-danger"  })
                            </div>

                            <div class="form-group">
                                <label class="control-label col-md-5">Giá</label>
                                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger"  })
                            </div>

                            <div class="form-group">
                                <label class="control-label col-md-5">Discount</label>
                                @Html.EditorFor(model => model.Discount, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger"  })
                            </div>

                            <div class="form-group">
                                <label class="control-label col-md-5">Tồn kho</label>
                                @Html.EditorFor(model => model.UnitsInStock, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.UnitsInStock, "", new { @class = "text-danger"  })
                            </div>

                            <div class="form-group">
                                <label class="control-label col-md-10">Trang đầu</label>
                                @Html.DropDownListFor(model => model.IsHome,  new[] { new SelectListItem { Value = "true", Text = "Có" },new SelectListItem { Value = "false", Text = "Không" } }, "[Trang đầu]" , new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.IsHome, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                <label class="control-label col-md-10">Bán chạy</label>
                                @Html.DropDownListFor(model => model.BestSeller,  new[] { new SelectListItem { Value = "true", Text = "Có" },new SelectListItem { Value = "false", Text = "Không" }}, "[Bán chạy]", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.BestSeller, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                <label class="control-label col-md-10">Trạng thái</label>
                                @Html.DropDownListFor(model => model.Active,  new[] { new SelectListItem { Value = "true", Text = "Hiển thị" },new SelectListItem { Value = "false", Text = "Không hiển thị" }, }, "[Trạng thái]", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </section>

}
@* @section Scripts{

    <script>
        var images = document.querySelectorAll('.image img')
        var close = document.querySelector('.close')
        var galleryImg = document.querySelector('.gallery_inner img')
        var gallery = document.querySelector('.gallery')

        var currentIndex = 0;

        function galleryShow()
        gallery.classList.add('show')
                }

        images.forEach((item, index) => {
            item.addEventListener('click', function () {
                currentIndex = index
                galleryShow()
            })
        })

        close.addEventListener('click', function () {
            gallery.classList.remove('show')
        })

        document.addEventListener('keydown', function (e) {
            if (e.keyCode == 27) {
                gallery.classList.remove('show')
            }
        })
    </script>
}

<style>

    .image {
        height: 150px;
        border-radius: 4px;
        overflow: hidden;
        margin: 15px 0;
    }

    img {
        width: auto;
        height: 100%;
        object-fit: cover;
        object-position: center;
        transition: 0.25s;
    }

    .image:hover img {
        cursor: pointer;
    }

    .gallery {
        position: fixed;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.8);
        display: flex;
        align-items: center;
        color: #fff;
        justify-content: center;
        opacity: 0;
        pointer-events: none;
        transform: scale(0.8);
        transition: 0.5s;
    }

    .close {
        position: fixed;
        top: 15px;
        right: 25px;
        font-size: 35px;
    }


        .close:hover {
            background: rgba(0, 0, 0, 0.4);
            padding: 2px 0px 0px 1px
        }

    .gallery_inner {
        width: 70%;
        max-height: 99%;
    }

        .gallery_inner .gallery_img {
            height: 50%;
            width: 50%;
            display: flex;
            margin: auto auto;
        }

    .show {
        opacity: 1;
        pointer-events: auto;
        transform: scale(1);
    }

    .hide {
        display: none;
    }

</style>

 *@